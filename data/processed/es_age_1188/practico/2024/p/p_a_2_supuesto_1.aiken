El organismo en el que usted presta servicios es el órgano competente para la concesión de unas becas para personas opositoras y, por tanto, ha surgido la necesidad de desarrollar un sistema de información que cubra todas las fases que se producen en la concesión de las becas.
A continuación, se expone parte del modelo de datos del sistema, donde los atributos señalados en negrita son claves primarias y los señalados en cursiva, claves foráneas:

                                                                                 |-----------------------------|
                                                                                 |       FicheroAdjunto        |
                                                                                 |-----------------------------|
                                                                                 | *IdFicheroAdjunto - bigint* |
                                                                              /O<| _IdSolicitudBeca - bigint_  |
                                                                             /   | Denominacion                |
|---------------------------------|     |------------------------------|    /    |-----------------------------|
|           Interesado            |     |       SolicitudBeca          |   /
|---------------------------------|     |------------------------------|  /      |-----------------------------|
| *IdInteresado - bigint*         |⊣\   | *IdSolicitudBeca - bigint*   |⊣/       |       Cuerpo Becado         |
| DocumentoIdentidad - varchar(9) |  \O<| _IdInteresado - bigint_      |         |-----------------------------|
| Nombre - varchar(100)           |     | _IdCuerpoBecado - bigint_    |>O------⊢| *IdCuerpoBecado - bigint*   |
| Apellido1 - varchar(100)        |     | FechaPresentacion - datetime |         | Codigo - varchar(10)        |
| Apellido2 - varchar(100)        |     | _IdEstado - bigint_          |         | Denominacion - varchar(100) |
| Email - varchar(100)            |     | AñoConvocatoria - int        |>O\      |-----------------------------|
|---------------------------------|     |------------------------------|   \
                                                                            \    |-----------------------------|
                                                                             \   |           Estado            |
                                                                              \  |-----------------------------|
                                                                               \⊢| *IdEstado - bigint*         |
                                                                                 | Codigo - varchar(10)        |
                                                                                 | Denominacion - varchar(100) |
                                                                                 |-----------------------------|

El sistema, en su parte frontend, permitirá la firma y presentación de solicitudes, subsanaciones y alegaciones por parte de los interesados una vez se autentiquen. También permitirá la descarga de los distintos listados que se publiquen por parte de los empleados públicos del organismo que tramita estas becas.
Por otra parte, el backend dará el servicio necesario al frontend y, además, permitirá a los empleados públicos del organismo, desde una aplicación de gestión, visualizar la información y documentación de las solicitudes, subsanaciones y alegaciones presentadas, así como la publicación de los listados mencionados anteriormente.
Para el desarrollo del frontend se utilizará un framework de desarrollo web con JavaScript, HTML5 y CSS3, mientras que el backend podrá desarrollarse con .NET o Java, dependiendo de la experiencia y conocimientos de los desarrolladores del organismo.
También se ha decidido usar GitHub (plataforma de desarrollo colaborativo para alojar proyectos utilizando el sistema de control de versiones Git) para poder compartir el trabajo entre los desarrolladores en la cual se puede almacenar, compartir y trabajar de forma conjunta en el código. De esta forma se permite seguir y administrar los cambios en el código a lo largo del tiempo.
Adicionalmente, se utilizará un gestor documental para la gestión de la documentación aportada en cada uno de los trámites por los interesados, así como los respectivos servicios del Catálogo de Servicios de Administración Digital que puedan reutilizarse.

1. ¿Qué elemento HTML utilizaría para impedir que el e-mail exceda los 100 caracteres cuando el interesado lo cumplimente?
a) <input type=''email'' id=''email'' name=''email'' size=''100''>
b) <input type=''email'' id=''email'' name=''email'' max=''100''>
c) <input type=''email'' id=''email'' name=''email'' maxlength=''100''>
d) <input type=''email'' id=''email'' name=''email'' length=''100''>
ANSWER:

2. ¿Qué ORM podría utilizar, en función de la solución de backend escogida?
a) JPA en .NET e Hibernate en Java.
b) Hibernate en .NET y Entity Framework en Java.
c) Entity Framework en .NET e Hibernate en Java.
d) Spring Data en .NET e Hibernate en Java.
ANSWER:

3. ¿Qué sentencia habría que ejecutar si se quiere añadir un nuevo registro a la tabla “CuerpoBecado”?
a) INSERT INTO CuerpoBecado (Codigo, Denominacion) VALUES ('TAI, 'Técnico Auxiliar de Informática');
b) INSERT INTO CuerpoBecado (Codigo, Denominacion) VALUES (TAI, Técnico Auxiliar de Informática);
c) INSERT TO CuerpoBecado (Codigo, Denominacion) VALUES ('TAI', 'Técnico Auxiliar de Informática');
d) INSERT INTO CuerpoBecado (Codigo, Denominacion) VALUES ('TAI', 'Técnico Auxiliar de Informática');
ANSWER:

4. ¿Qué tipo de correspondencia hay entre las tablas “SolicitudBeca” y “FicheroAdjunto”?
a) Un registro de SolicitudBeca puede tener N registros de FicheroAdjunto.
b) Un registro de SolicitudBeca puede tener como máximo un registro de FicheroAdjunto.
c) N registros de SolicitudBeca pueden tener M registros de FicheroAdjunto.
d) Un registro de SolicitudBeca puede tener cero o como máximo un registro de FicheroAdjunto.
ANSWER:

5. A este sistema le es de aplicación la normativa vigente de accesibilidad de sitios web. ¿Qué herramienta automatizada utilizaría para probar que la aplicación cumple con los estándares de accesibilidad?
a) QualWeb.
b) Equal Automatic Checker.
c) AccSite.
d) Shovel.
ANSWER:

6. El formulario de solicitud será extenso y tendrá muchas consultas de datos. ¿Qué utilizaría para renderizar la página en el servidor?
a) Server Sent Events.
b) Ajax.
c) WebSocket.
d) Server Side Rendering.
ANSWER:

7. El proceso de presentación de solicitud implica la autenticación del usuario, la firma de la solicitud, el guardado en base de datos, la generación de un asiento registral y la generación de un justificante de presentación. ¿Qué diagrama UML utilizaría para representar las acciones implicadas en este flujo?
a) Diagrama de paquetes.
b) Diagrama de objetos.
c) Diagrama de secuencia.
d) Diagrama de Entidad/Relación.
ANSWER:

8. En caso de utilizar Java para el backend, ¿qué tecnología puede utilizar para generar un cliente de servicios web?
a) Apache Flink.
b) Apache Xalan.
c) Apache Xerces.
d) Apache CXF.
ANSWER:

9.En un entorno de desarrollo Java, ¿qué utilizaría para mapear elementos XML a clases?
a) JAXB.
b) JPA.
c) JAXR.
d) JAX-RS.
ANSWER:

10. Está escogiendo herramientas que le permitan analizar y mejorar la calidad del código. ¿Cuál de las siguientes NO le será de ayuda?
a) SonarQube.
b) Un linter de JavaScript.
c) PMD.
d) Mercurial.
ANSWER:

11. Necesita controlar el plazo de presentación de solicitudes. Suponiendo que utiliza Java en el backend, ¿qué clase nativa de Java puede utilizar para trabajar con una fecha y hora simultáneamente?
a) LocalDateTime.
b) LocalDate.
c) LocalTime.
d) OffsetTime.
ANSWER:

12. Para que la aplicación de gestión pueda interactuar con esta aplicación, se va a exponer una capa de servicios web. ¿Cuál de las siguientes opciones NO es válida para documentar dichos servicios?
a) RAML.
b) REST.
c) WSDL.
d) OpenAPI/Swagger.
ANSWER:

13. Se desea añadir una tabla “Subsanacion” con las columnas numéricas IdSubsanacion e IdSolicitudBeca y la columna alfanumérica de 2000 caracteres TextoFundamento. ¿Cuál de las siguientes sentencias sería la correcta?
a) CREATE TABLE Subsanacion (IdSubsanacion bigint, IdSolicitudBeca bigint, TextoFundamento varchar(2000));
b) CREATE Subsanacion (IdSubsanacion bigint, IdSolicitudBeca bigint, TextoFundamento varchar(2000));
c) CREATE NEW TABLE Subsanacion (IdSubsanacion bigint, IdSolicitudBeca bigint, TextoFundamento varchar(2000));
d) CREATE TABLE Subsanacion AS (IdSubsanacion bigint, IdSolicitudBeca bigint, TextoFundamento varchar(2000));
ANSWER:

14. Se espera un alto volumen de concurrencia en el sistema. ¿Qué nivel de aislamiento de base de datos debería configurar para que no se produzcan lecturas sucias ni lecturas no repetibles, pero sí lecturas fantasmas?
a) Serializable.
b) Read committed.
c) Read uncommited.
d) Repeatable read.
ANSWER:

15. Se ha determinado que es necesaria la integración de la aplicación con GEISER, cuyos servicios web son de naturaleza SOAP. ¿Con qué firmará las peticiones generadas por la aplicación?
a) WS-Security.
b) SAML.
c) JWT.
d) XML-Encryption.
ANSWER:

16. Se quiere utilizar la librería iText de .NET para generar un documento PDF que sirva como justificante de presentación al interesado. ¿Con qué comando instalaría el paquete NuGet?
a) dotnet add package iText.
b) dotnet install package iText.
c) dotnet add iText.
d) dotnet install iText.
ANSWER:

17. Según “Técnicas y Practicas” de Métrica v3, si se quisiera optimizar el modelo físico de datos para reducir o simplificar el número de accesos a la base de datos, ¿cuál de las siguientes acciones se aplicaría?
a) Combinar entidades si los accesos son frecuentes en transacciones distintas.
b) Eliminar entidades.
c) Introducir elementos redundantes.
d) Normalizar las tablas en Forma Normal de Boyce-Codd (FNBC).
ANSWER:

18. Suponiendo que se utilizara la metodología ágil SCRUM, si durante un sprint, se da cuenta de que se está aplicando una mala práctica que puede enlentecer el proyecto, ¿en qué reunión comentará esa mala práctica, para buscar la mejora continua y evitar aplicarla en los siguientes sprints?
a) En la Daily Scrum.
b) En la Sprint Retrospective.
c) En la Sprint Planning.
d) En la Sprint Review.
ANSWER:

19. También el sistema se integrará con la PID (Plataforma de Intermediación de Datos), cuya plataforma actual se define como una arquitectura orientada a servicios (SOA). ¿Cuáles son los componentes principales de esta arquitectura?
a) Servicio, Proveedor de servicios, Consumidor de servicios y Orquestador de servicios.
b) Servicio, Proveedor de servicios, Consumidor de servicios y Depurador de servicios.
c) Servicio, Proveedor de servicios, Consumidor de servicios y Comparador de servicios.
d) Servicio, Proveedor de servicios, Consumidor de servicios y Registro de servicios.
ANSWER:

20. Tras estudiar varias opciones se ha decidido utilizar .NET con C# para desarrollar el backend, ¿cómo puede indicar la opcionalidad de un tipo de dato?
a) int? Telefono
b) int|null Telefono
c) int:null Telefono
d) int ?? Telefono
ANSWER:

1. [RESERVA] Para diseñar el estilo de los campos de entrada obligatorios del formulario de solicitud se va a hacer uso del siguiente selector CSS: “input:required”. ¿Cuál es su especificidad?
a) 1-1-0.
b) 0-1-1.
c) 1-0-1.
d) 1-0-0.
ANSWER:

2. [RESERVA] Se quiere facilitar el uso de herramientas de asistencia en la página. ¿Qué atributo utilizaría para indicar que un elemento se actualizará?
a) aria-live.
b) aria-cheked.
c) aria-flowto.
d) aria-valuenow.
ANSWER:

3. [RESERVA] Para resolver una incidencia, necesita saber qué ficheros adjuntos de la solicitud del interesado con DNI 00000000T para el año 2024 no son PDF. ¿Cómo los obtendría?
a) SELECT * FROM FicheroAdjunto WHERE Denominacion LIKE '%.pdf' AND IdSolicitudBeca = (SELECT IdSolicitudBeca FROM SolicitudBeca WHERE AñoConvocatoria = 2024 AND IdInteresado = (SELECT IdInteresado WHERE DocumentoIdentidad = '00000000T'));
b) SELECT * FROM FicheroAdjunto WHERE Denominacion NOT LIKE '%.pdf' AND IdSolicitudBeca = (SELECT IdSolicitudBeca FROM SolicitudBeca WHERE AñoConvocatoria = 2024 AND IdInteresado = (SELECT IdInteresado FROM Interesado));
c) SELECT * FROM FicheroAdjunto WHERE Denominacion NOT LIKE '%.pdf' AND IdSolicitudBeca = (SELECT IdSolicitudBeca FROM SolicitudBeca WHERE AñoConvocatoria = 2024 AND IdInteresado = (SELECT IdInteresado FROM Interesado WHERE DocumentoIdentidad = '00000000T'))
d) SELECT * FROM FicheroAdjunto WHERE Denominacion NOT LIKE 'pdf' AND IdSolicitudBeca = (SELECT IdSolicitudBeca FROM SolicitudBeca WHERE AñoConvocatoria = 2024 AND IdInteresado = (SELECT IdInteresado FROM Interesado WHERE DocumentoIdentidad = '00000000T'));
ANSWER:

4. [RESERVA] ¿Qué tendrá que configurar en el backend si quiere restringir que las únicas peticiones HTTP de origen cruzado iniciadas desde scripts que se acepten procedan del frontend?
a) HSTS.
b) CSP.
c) TLS.
d) CORS.
ANSWER:

5. [RESERVA] Quiere facilitar la incorporación de otros desarrolladores al proyecto y para ello, en el repositorio de código, va a crear un fichero en el que incluirá, entre otra información, el propósito del proyecto y cómo arrancarlo localmente. Esa información se incluirá en el fichero:
a) CODEOWNERS.
b) README.MD.
c) LICENSE.
d) CITATION.
ANSWER: